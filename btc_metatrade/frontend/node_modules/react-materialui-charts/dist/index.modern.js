import React from 'react';
import { makeStyles } from '@material-ui/core/styles';
import { Paper, Grid, Card, CardHeader, CardContent } from '@material-ui/core';
import NumberFormat from 'react-number-format';
import { ResponsiveContainer, LineChart, XAxis, Line, Tooltip, BarChart, Bar, PieChart, Pie, Cell } from 'recharts';

var RADIAN = Math.PI / 180;

var renderCustomizedLabel = function renderCustomizedLabel(_ref) {
  var cx = _ref.cx,
      cy = _ref.cy,
      midAngle = _ref.midAngle,
      innerRadius = _ref.innerRadius,
      outerRadius = _ref.outerRadius,
      percent = _ref.percent;
  var radius = innerRadius + (outerRadius - innerRadius) * 0.5;
  var x = cx + radius * Math.cos(-midAngle * RADIAN);
  var y = cy + radius * Math.sin(-midAngle * RADIAN);
  return /*#__PURE__*/React.createElement("text", {
    x: x,
    y: y,
    fill: "white",
    textAnchor: x > cx ? 'start' : 'end',
    dominantBaseline: "central"
  }, (percent * 100).toFixed(0) + "%");
};

var useStyles = makeStyles(function (theme) {
  return {
    root: {
      padding: theme.spacing(2)
    },
    h2: {
      color: theme.palette["default"]
    },
    cardContent: {
      padding: 0
    }
  };
});
var PaperLineChart = function PaperLineChart(props) {
  var classes = useStyles();
  return /*#__PURE__*/React.createElement(Paper, {
    className: classes.root,
    style: {
      maxWidth: props.width,
      background: props.backgroundGradient ? "linear-gradient(" + (props.backgroundGradient[2] ? props.backgroundGradient[2] : 45) + "deg, " + props.backgroundGradient[0] + " 30%, " + props.backgroundGradient[1] + " 90%)" : props.backgroundColor
    }
  }, /*#__PURE__*/React.createElement(Grid, {
    container: true,
    spacing: 0
  }, /*#__PURE__*/React.createElement(Grid, {
    item: true,
    xs: 12,
    sm: 12,
    xl: 12,
    lg: 12
  }, /*#__PURE__*/React.createElement(Grid, {
    container: true,
    spacing: 0
  }, /*#__PURE__*/React.createElement(Grid, {
    item: true,
    xs: 6,
    sm: 6,
    xl: 6,
    lg: 6
  }, /*#__PURE__*/React.createElement("h2", {
    style: {
      "float": 'left'
    },
    className: classes.h2
  }, props.title)), /*#__PURE__*/React.createElement(Grid, {
    item: true,
    xs: 6,
    sm: 6,
    xl: 6,
    lg: 6
  }, /*#__PURE__*/React.createElement("h2", {
    style: {
      "float": 'right'
    }
  }, /*#__PURE__*/React.createElement(NumberFormat, {
    value: props.value,
    displayType: 'text',
    thousandSeparator: true
  }))))), /*#__PURE__*/React.createElement(Grid, {
    item: true,
    xs: 12,
    sm: 12,
    xl: 12,
    lg: 12
  }, /*#__PURE__*/React.createElement(ResponsiveContainer, {
    width: "100%",
    height: props.height
  }, /*#__PURE__*/React.createElement(LineChart, {
    data: props.data,
    margin: {
      top: 5,
      right: 5,
      bottom: 2,
      left: 5
    }
  }, /*#__PURE__*/React.createElement(XAxis, {
    dataKey: "date",
    hide: true,
    allowDataOverflow: false,
    allowDuplicatedCategory: false,
    interval: 'preserveStartEnd',
    axisLine: true
  }), props.dataLines.map(function (lines, index) {
    return /*#__PURE__*/React.createElement(Line, {
      type: "monotone",
      dataKey: props.dataLines[index],
      stroke: props.chartColor[index],
      dot: false,
      strokeWidth: 3,
      connectNulls: true,
      key: index
    });
  }), /*#__PURE__*/React.createElement(Tooltip, {
    cursor: false
  }))))));
};
var CardLineChart = function CardLineChart(props) {
  var classes = useStyles();
  return /*#__PURE__*/React.createElement(Card, {
    className: classes.root,
    style: {
      maxWidth: props.width,
      background: props.backgroundGradient ? "linear-gradient(" + (props.backgroundGradient[2] ? props.backgroundGradient[2] : 45) + "deg, " + props.backgroundGradient[0] + " 30%, " + props.backgroundGradient[1] + " 90%)" : props.backgroundColor
    }
  }, /*#__PURE__*/React.createElement(CardHeader, {
    title: props.title ? props.title : null,
    subheader: props.subheader ? props.subheader : null
  }), /*#__PURE__*/React.createElement(CardContent, {
    className: classes.cardContent
  }, /*#__PURE__*/React.createElement(ResponsiveContainer, {
    width: "100%",
    height: props.height
  }, /*#__PURE__*/React.createElement(LineChart, {
    data: props.data,
    margin: {
      top: 5,
      right: 5,
      bottom: 2,
      left: 5
    }
  }, /*#__PURE__*/React.createElement(XAxis, {
    dataKey: "date",
    hide: true,
    allowDataOverflow: false,
    allowDuplicatedCategory: false,
    interval: 'preserveStartEnd',
    axisLine: true
  }), props.dataLines.map(function (lines, index) {
    return /*#__PURE__*/React.createElement(Line, {
      type: "monotone",
      dataKey: props.dataLines[index],
      stroke: props.chartColor[index],
      dot: false,
      strokeWidth: 3,
      connectNulls: true,
      key: index
    });
  }), /*#__PURE__*/React.createElement(Tooltip, {
    cursor: false
  })))));
};
var PaperBarChart = function PaperBarChart(props) {
  var classes = useStyles();
  return /*#__PURE__*/React.createElement(Paper, {
    className: classes.root,
    style: {
      maxWidth: props.width,
      background: props.backgroundGradient ? "linear-gradient(" + (props.backgroundGradient[2] ? props.backgroundGradient[2] : 45) + "deg, " + props.backgroundGradient[0] + " 30%, " + props.backgroundGradient[1] + " 90%)" : props.backgroundColor
    }
  }, /*#__PURE__*/React.createElement(Grid, {
    container: true,
    spacing: 2
  }, /*#__PURE__*/React.createElement(Grid, {
    item: true,
    xs: 12,
    sm: 12,
    xl: 12,
    lg: 12
  }, /*#__PURE__*/React.createElement(Grid, {
    container: true,
    spacing: 0
  }, /*#__PURE__*/React.createElement(Grid, {
    item: true,
    xs: 6,
    sm: 6,
    xl: 6,
    lg: 6
  }, /*#__PURE__*/React.createElement("h2", {
    style: {
      "float": 'left'
    }
  }, props.title)), /*#__PURE__*/React.createElement(Grid, {
    item: true,
    xs: 6,
    sm: 6,
    xl: 6,
    lg: 6
  }, /*#__PURE__*/React.createElement("h2", {
    style: {
      "float": 'right'
    }
  }, /*#__PURE__*/React.createElement(NumberFormat, {
    value: props.value,
    displayType: 'text',
    thousandSeparator: true
  }))))), /*#__PURE__*/React.createElement(Grid, {
    item: true,
    xs: 12,
    sm: 12,
    xl: 12,
    lg: 12
  }, /*#__PURE__*/React.createElement(ResponsiveContainer, {
    width: "100%",
    height: props.height
  }, /*#__PURE__*/React.createElement(BarChart, {
    data: props.data,
    margin: {
      top: 5,
      right: 5,
      bottom: 2,
      left: 5
    }
  }, /*#__PURE__*/React.createElement(XAxis, {
    dataKey: "date",
    hide: true
  }), props.dataBars.map(function (bars, index) {
    return /*#__PURE__*/React.createElement(Bar, {
      dataKey: props.dataBars[index],
      stackId: "a",
      fill: props.chartColor[index],
      key: index
    });
  }), /*#__PURE__*/React.createElement(Tooltip, null))))));
};
var CardBarChart = function CardBarChart(props) {
  var classes = useStyles();
  return /*#__PURE__*/React.createElement(Card, {
    className: classes.root,
    style: {
      maxWidth: props.width,
      background: props.backgroundGradient ? "linear-gradient(" + (props.backgroundGradient[2] ? props.backgroundGradient[2] : 45) + "deg, " + props.backgroundGradient[0] + " 30%, " + props.backgroundGradient[1] + " 90%)" : props.backgroundColor
    }
  }, /*#__PURE__*/React.createElement(CardHeader, {
    title: props.title ? props.title : null,
    subheader: props.subheader ? props.subheader : null
  }), /*#__PURE__*/React.createElement(CardContent, {
    className: classes.cardContent
  }, /*#__PURE__*/React.createElement(ResponsiveContainer, {
    width: "100%",
    height: props.height
  }, /*#__PURE__*/React.createElement(BarChart, {
    data: props.data,
    margin: {
      top: 5,
      right: 5,
      bottom: 2,
      left: 5
    }
  }, /*#__PURE__*/React.createElement(XAxis, {
    dataKey: "date",
    hide: true
  }), props.dataBars.map(function (bars, index) {
    return /*#__PURE__*/React.createElement(Bar, {
      dataKey: props.dataBars[index],
      stackId: "a",
      fill: props.chartColor[index],
      key: index
    });
  }), /*#__PURE__*/React.createElement(Tooltip, null)))));
};
var PaperPieChart = function PaperPieChart(props) {
  var classes = useStyles();
  return /*#__PURE__*/React.createElement(Paper, {
    className: classes.root,
    style: {
      maxWidth: props.width,
      background: props.backgroundGradient ? "linear-gradient(" + (props.backgroundGradient[2] ? props.backgroundGradient[2] : 45) + "deg, " + props.backgroundGradient[0] + " 30%, " + props.backgroundGradient[1] + " 90%)" : props.backgroundColor
    }
  }, /*#__PURE__*/React.createElement(Grid, {
    container: true,
    spacing: 0,
    justify: "center"
  }, /*#__PURE__*/React.createElement(Grid, {
    item: true,
    xs: 12,
    sm: 12,
    xl: 12,
    lg: 12
  }, /*#__PURE__*/React.createElement(Grid, {
    container: true,
    spacing: 0
  }, /*#__PURE__*/React.createElement(Grid, {
    item: true,
    xs: 6,
    sm: 6,
    xl: 6,
    lg: 6
  }, /*#__PURE__*/React.createElement("h2", {
    style: {
      "float": 'left'
    },
    className: classes.h2
  }, props.title)), /*#__PURE__*/React.createElement(Grid, {
    item: true,
    xs: 6,
    sm: 6,
    xl: 6,
    lg: 6
  }, /*#__PURE__*/React.createElement("h2", {
    style: {
      "float": 'right'
    }
  }, /*#__PURE__*/React.createElement(NumberFormat, {
    value: props.value,
    displayType: 'text',
    thousandSeparator: true
  }))))), /*#__PURE__*/React.createElement(Grid, {
    item: true,
    xs: 12,
    sm: 12,
    xl: 12,
    lg: 12
  }, /*#__PURE__*/React.createElement(ResponsiveContainer, {
    width: "100%",
    height: props.height
  }, /*#__PURE__*/React.createElement(PieChart, {
    width: props.width
  }, /*#__PURE__*/React.createElement(Pie, {
    data: props.data,
    cx: props.width / 2,
    cy: props.width / 2,
    labelLine: false,
    label: renderCustomizedLabel,
    outerRadius: props.width / 2 - 10,
    fill: "#8884d8"
  }, props.data.map(function (entry, index) {
    return /*#__PURE__*/React.createElement(Cell, {
      fill: props.chartColor[index % props.chartColor.length],
      key: index
    });
  })), /*#__PURE__*/React.createElement(Tooltip, {
    cursor: true
  }))))));
};
var CardPieChart = function CardPieChart(props) {
  var classes = useStyles();
  return /*#__PURE__*/React.createElement(Card, {
    className: classes.root,
    style: {
      maxWidth: props.width,
      background: props.backgroundGradient ? "linear-gradient(" + (props.backgroundGradient[2] ? props.backgroundGradient[2] : 45) + "deg, " + props.backgroundGradient[0] + " 30%, " + props.backgroundGradient[1] + " 90%)" : props.backgroundColor
    }
  }, /*#__PURE__*/React.createElement(CardHeader, {
    title: props.title ? props.title : null,
    subheader: props.subheader ? props.subheader : null
  }), /*#__PURE__*/React.createElement(CardContent, {
    className: classes.cardContent
  }, /*#__PURE__*/React.createElement(ResponsiveContainer, {
    width: "100%",
    height: props.height
  }, /*#__PURE__*/React.createElement(PieChart, {
    width: props.width
  }, /*#__PURE__*/React.createElement(Pie, {
    data: props.data,
    cx: props.width / 2,
    cy: props.width / 2,
    labelLine: false,
    label: renderCustomizedLabel,
    outerRadius: props.width / 2 - 10,
    fill: "#8884d8"
  }, props.data.map(function (entry, index) {
    return /*#__PURE__*/React.createElement(Cell, {
      fill: props.chartColor[index % props.chartColor.length],
      key: index
    });
  })), /*#__PURE__*/React.createElement(Tooltip, {
    cursor: true
  })))));
};

export { CardBarChart, CardLineChart, CardPieChart, PaperBarChart, PaperLineChart, PaperPieChart };
//# sourceMappingURL=index.modern.js.map
